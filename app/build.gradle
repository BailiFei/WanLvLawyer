import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def transform(String targetStr) {
    return new String(targetStr.getBytes("iso8859-1"), "UTF-8")
}

android {
    compileSdkVersion project.COMPILE_SDK_VERSION as int
    signingConfigs {
        debug {
            storeFile file("key")
            storePassword 'lawyer123'
            keyAlias 'key0'
            keyPassword 'lawyer123'
        }

        release {
            storeFile file("key")
            storePassword 'lawyer123'
            keyAlias 'key0'
            keyPassword 'lawyer123'
        }
    }
    defaultConfig {
        applicationId project.applicationId
        minSdkVersion project.MIN_SDK_VERSION as int
        targetSdkVersion 26
        versionCode releaseVersionCode()
        versionName project.VERSION_NAME as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'SERVICE_HOST', SERVICE_HOST
        buildConfigField 'String', 'OSS_HOST', OSS_HOST
        buildConfigField 'String', 'developmentPeriod', transform(DEVELOPMENT_PERIOD)
        buildConfigField 'String', 'UMENG_CHANNEL_VALUE', UMENG_CHANNEL_VALUE
        buildConfigField 'String', 'UMENG_APPKEY', UMENG_APPKEY

        // AndroidManifest.xml 里面UMENG_CHANNEL的value为 ${UMENG_CHANNEL_VALUE}
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]//添加一个默认渠道号

        flavorDimensions "versionCode"
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false

//            applicationVariants.all { variant ->
//                System.out.print("variant.buildType.name------:"+variant.buildType.name+">");
//                if (variant.buildType.name.equals('release')) {
//                    variant.outputs.all { output ->
//                        def apkPath = value('apk.dir')
//                        if (apkPath == null) apkPath = projectDir.toString() + "/apk"
//                        log apkPath
//                        variant.getPackageApplication().outputDirectory = new File(apkPath)
//                        def buildName = "lawyer"
//                        def releaseApkName = buildName + '_' + releaseTime() + '.apk'
//                        outputFileName = releaseApkName
//
//                        System.out.print("apkPath------:"+apkPath+">");
//                        System.out.print("outputFileName------:"+outputFileName+">");
//                    }
//                }
//            }
        }
    }
    buildToolsVersion project.BUILD_TOOL_VERSION
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    dataBinding {
        enabled = true
    }

    productFlavors {
        baidu01 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"baidu01"'
        }
        baidu02 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"baidu02"'
        }
        baidu03 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"baidu03"'
        }
        baidu04 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"baidu04"'
        }
        baidu05 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"baidu05"'
        }
        a360 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"a360"'
        }
        so360 {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"so360"'
        }
        not_channel {
            buildConfigField 'String', 'UMENG_CHANNEL_VALUE', '"not_channel"'
        }
    }
    //模拟器支持
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'armeabi-v7a', 'x86_64'
//            universalApk true
//        }
//    }
}

static def releaseTime() {
    return new SimpleDateFormat("yyyyMMdd").format(new Date())
}

static def releaseVersionCode() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC")).toInteger() * 10 + 2
}

dependencies {
    implementation 'ink.itwo:common:0.1.2.03'
    implementation 'ink.itwo:qrcode:0.1.2'
    implementation 'ink.itwo:mediapicker:0.1.2'
    implementation 'ink.itwo:net:0.1.2'
    implementation 'ink.itwo:alioss:0.1.2'
    //https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:2.3.2'
//    //弹幕
//    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
//    implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
//    implementation 'com.github.ctiao:ndkbitmap-armv5:0.9.21'
//    implementation 'com.github.ctiao:ndkbitmap-x86:0.9.21'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'cn.jzvd:jiaozivideoplayer:6.4.1'
    implementation 'com.tencent.bugly:crashreport:2.8.6'

//    implementation project(path: ':moor7')
    implementation project(path: ':moor7_323')

    implementation files('libs/alipaySdk-20180601.jar')
    implementation files('libs/libammsdk.jar')
    //友盟统计
    implementation 'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.0.0'

//    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation (name:'securepay-4.0.6',ext:'aar')
    implementation (name:'base-4.0.6',ext:'aar')
    implementation (name:'mobilebank-4.0.6',ext:'aar')

}

// key-password lawyer123